import java.util.*;

public class Test {
public List<Integer> majorityElement(int[] nums) {
        
        List<Integer> res = new ArrayList<Integer>();
        int l = nums.length;
        if(nums == null || nums.length == 0) return res;
        else if(nums.length == 1) {
            res.add(nums[0]);
            return res;
        }
        int[] num = {nums[0], nums[1]};
        int[] count = {1, 1};
        for(int i = 2; i < l; i++) {
            if(nums[i] != num[0] && nums[i] != num[1]) {
                count[0]--;
                count[1]--;
            }
            else if(nums[i] == num[0]) count[0]++;
            else if(nums[i] == num[1]) count[1]++;
            
            if(count[0] == 0) {
                count[0] = 1;
                num[0] = nums[i];
            }
            else if(count[1] == 0) {
                count[1] = 1;
                num[1] = nums[i];
            }
        }
        int time1 = 0;
        int time2 = 0;
        for(int i = 0; i < l; i++) {
            if(nums[i] == num[0]) time1++;
            if(nums[i] == num[1]) time2++;
        }
        if(time1 > l/3) res.add(num[0]);
        if(time2 > l/3 && num[1] != num[0]) res.add(num[1]);
        return res;
    }
    public static void main(String[] arug) {

    	int[][] a = new int[][]{{1,0,2,0,1},{0,0,0,0,0},{0,0,1,0,0}};
    	int[] c = new int[]{8,8,7,7,7};
    	//Test.shortestDistance(a);
    	 Test b = new Test();
    	 b.majorityElement(c);


    }
}