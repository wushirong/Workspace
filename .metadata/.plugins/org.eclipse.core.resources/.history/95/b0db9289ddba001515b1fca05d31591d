import java.util.*;


  

 
public class Test {
	
	public static class ListNode {
	      int val;
	      ListNode next;
	      ListNode(int x) { val = x; }
	  }
	
	public void reorderList(ListNode head) {
        if(head == null || head.next == null || head.next.next == null) return;
        ListNode walker = head;
        ListNode runner = head;
        while(runner != null && runner.next != null) {
            walker = walker.next;
            runner = runner.next.next;
        }
        ListNode mid = walker;
        walker = walker.next;
        ListNode next = walker.next;
        while(walker!= null && next != null) {
            mid.next = next;
            next = next.next;
            mid.next.next = walker;
            walker = mid.next;
        }
        ListNode front = head;
         while(front != mid && mid.next != null) {
            walker = front.next;
            runner = mid.next;
            front.next = runner;
            mid.next = runner.next;
            runner.next = walker;
            front = walker;
        }
        return ;
    }
    
    public static void main(String[] arug) {

    	int[][] a = new int[][]{{1,0,2,0,1},{0,0,0,0,0},{0,0,1,0,0}};
    	int[] c = new int[]{1, -1};
    	//Test.shortestDistance(a);
    	 Test b = new Test();
    	 ListNode head = new ListNode(1);
    	 head.next = new ListNode(2);
    	 head.next.next = new ListNode(3);
    	 head.next.next.next = new ListNode(4);
    	 head.next.next.next.next = new ListNode(5);
    	 b.reorderList(head);


    }
}