import java.util.*;


  

 
public class Test {
	
	public static class ListNode {
	      int val;
	      ListNode next;
	      ListNode(int x) { val = x; }
	  }
	
	public void reorderList(ListNode head) {
        if(head == null || head.next == null || head.next.next == null) return;
        ListNode walker = head;
        ListNode runner = head;
        ListNode head1 = head;
        while(runner != null && runner.next != null) {
            walker = walker.next;
            runner = runner.next.next;
        }
        ListNode head2 = walker.next;
        walker.next = null;
        walker = head2;
        runner = head2.next;
        ListNode next = null;
        while(runner != null) {
            next = runner.next;
            runner.next = walker;
            walker = runner;
            runner = next;
        }
        head2 = walker;
        while(head2 != null) {
            walker = head1.next;
            runner = head2.next;
            head1.next = head2;
            head2.next = walker;
            head1 = walker;
            head2 = runner;
        }
    }
    
    public static void main(String[] arug) {

    	int[][] a = new int[][]{{1,0,2,0,1},{0,0,0,0,0},{0,0,1,0,0}};
    	int[] c = new int[]{1, -1};
    	//Test.shortestDistance(a);
    	 Test b = new Test();
    	 ListNode head = new ListNode(1);
    	 head.next = new ListNode(2);
    	 head.next.next = new ListNode(3);
    	 head.next.next.next = new ListNode(4);
    	 head.next.next.next.next = new ListNode(5);
    	 b.reorderList(head);


    }
}